-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bellman_ford_bellman_ford_Pipeline_VITIS_LOOP_46_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dist_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dist_0_ce0 : OUT STD_LOGIC;
    dist_0_we0 : OUT STD_LOGIC;
    dist_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dist_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dist_3_ce0 : OUT STD_LOGIC;
    dist_3_we0 : OUT STD_LOGIC;
    dist_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dist_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dist_2_ce0 : OUT STD_LOGIC;
    dist_2_we0 : OUT STD_LOGIC;
    dist_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dist_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dist_1_ce0 : OUT STD_LOGIC;
    dist_1_we0 : OUT STD_LOGIC;
    dist_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_128_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_129_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_130_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_131_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_132_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_133_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_134_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_135_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_136_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_137_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_138_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_139_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_140_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_141_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_142_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_143_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_144_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_145_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_146_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_147_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_148_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_149_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_150_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_151_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_152_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_153_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_154_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_155_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_156_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_157_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_158_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_159_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_160_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_161_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_162_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_163_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_164_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_165_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_166_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_167_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_168_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_169_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_170_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_171_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_172_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_173_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_174_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_175_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_176_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_177_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_178_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_179_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_180_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_181_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_182_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_183_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_184_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_185_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_186_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_187_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_188_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_189_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_190_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_191_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_192_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_193_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_194_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_195_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_196_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_197_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_198_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_199_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_200_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_201_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_202_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_203_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_204_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_205_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_206_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_207_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_208_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_209_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_210_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_211_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_212_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_213_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_214_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_215_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_216_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_217_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_218_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_219_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_220_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_221_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_222_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_223_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_224_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_225_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_226_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_227_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_228_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_229_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_230_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_231_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_232_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_233_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_234_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_235_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_236_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_237_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_238_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_239_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_240_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_241_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_242_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_243_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_244_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_245_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_246_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_247_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_248_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_249_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_250_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_251_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_252_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_253_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_254_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    updated_dist_255_reload : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of bellman_ford_bellman_ford_Pipeline_VITIS_LOOP_46_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln1027_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal zext_ln48_fu_1446_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln48_fu_1432_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_V_1_fu_318 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln840_fu_1156_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_V : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_1166_p130 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1166_p129 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln3_fu_1436_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component bellman_ford_mux_1287_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        din65_WIDTH : INTEGER;
        din66_WIDTH : INTEGER;
        din67_WIDTH : INTEGER;
        din68_WIDTH : INTEGER;
        din69_WIDTH : INTEGER;
        din70_WIDTH : INTEGER;
        din71_WIDTH : INTEGER;
        din72_WIDTH : INTEGER;
        din73_WIDTH : INTEGER;
        din74_WIDTH : INTEGER;
        din75_WIDTH : INTEGER;
        din76_WIDTH : INTEGER;
        din77_WIDTH : INTEGER;
        din78_WIDTH : INTEGER;
        din79_WIDTH : INTEGER;
        din80_WIDTH : INTEGER;
        din81_WIDTH : INTEGER;
        din82_WIDTH : INTEGER;
        din83_WIDTH : INTEGER;
        din84_WIDTH : INTEGER;
        din85_WIDTH : INTEGER;
        din86_WIDTH : INTEGER;
        din87_WIDTH : INTEGER;
        din88_WIDTH : INTEGER;
        din89_WIDTH : INTEGER;
        din90_WIDTH : INTEGER;
        din91_WIDTH : INTEGER;
        din92_WIDTH : INTEGER;
        din93_WIDTH : INTEGER;
        din94_WIDTH : INTEGER;
        din95_WIDTH : INTEGER;
        din96_WIDTH : INTEGER;
        din97_WIDTH : INTEGER;
        din98_WIDTH : INTEGER;
        din99_WIDTH : INTEGER;
        din100_WIDTH : INTEGER;
        din101_WIDTH : INTEGER;
        din102_WIDTH : INTEGER;
        din103_WIDTH : INTEGER;
        din104_WIDTH : INTEGER;
        din105_WIDTH : INTEGER;
        din106_WIDTH : INTEGER;
        din107_WIDTH : INTEGER;
        din108_WIDTH : INTEGER;
        din109_WIDTH : INTEGER;
        din110_WIDTH : INTEGER;
        din111_WIDTH : INTEGER;
        din112_WIDTH : INTEGER;
        din113_WIDTH : INTEGER;
        din114_WIDTH : INTEGER;
        din115_WIDTH : INTEGER;
        din116_WIDTH : INTEGER;
        din117_WIDTH : INTEGER;
        din118_WIDTH : INTEGER;
        din119_WIDTH : INTEGER;
        din120_WIDTH : INTEGER;
        din121_WIDTH : INTEGER;
        din122_WIDTH : INTEGER;
        din123_WIDTH : INTEGER;
        din124_WIDTH : INTEGER;
        din125_WIDTH : INTEGER;
        din126_WIDTH : INTEGER;
        din127_WIDTH : INTEGER;
        din128_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (31 downto 0);
        din37 : IN STD_LOGIC_VECTOR (31 downto 0);
        din38 : IN STD_LOGIC_VECTOR (31 downto 0);
        din39 : IN STD_LOGIC_VECTOR (31 downto 0);
        din40 : IN STD_LOGIC_VECTOR (31 downto 0);
        din41 : IN STD_LOGIC_VECTOR (31 downto 0);
        din42 : IN STD_LOGIC_VECTOR (31 downto 0);
        din43 : IN STD_LOGIC_VECTOR (31 downto 0);
        din44 : IN STD_LOGIC_VECTOR (31 downto 0);
        din45 : IN STD_LOGIC_VECTOR (31 downto 0);
        din46 : IN STD_LOGIC_VECTOR (31 downto 0);
        din47 : IN STD_LOGIC_VECTOR (31 downto 0);
        din48 : IN STD_LOGIC_VECTOR (31 downto 0);
        din49 : IN STD_LOGIC_VECTOR (31 downto 0);
        din50 : IN STD_LOGIC_VECTOR (31 downto 0);
        din51 : IN STD_LOGIC_VECTOR (31 downto 0);
        din52 : IN STD_LOGIC_VECTOR (31 downto 0);
        din53 : IN STD_LOGIC_VECTOR (31 downto 0);
        din54 : IN STD_LOGIC_VECTOR (31 downto 0);
        din55 : IN STD_LOGIC_VECTOR (31 downto 0);
        din56 : IN STD_LOGIC_VECTOR (31 downto 0);
        din57 : IN STD_LOGIC_VECTOR (31 downto 0);
        din58 : IN STD_LOGIC_VECTOR (31 downto 0);
        din59 : IN STD_LOGIC_VECTOR (31 downto 0);
        din60 : IN STD_LOGIC_VECTOR (31 downto 0);
        din61 : IN STD_LOGIC_VECTOR (31 downto 0);
        din62 : IN STD_LOGIC_VECTOR (31 downto 0);
        din63 : IN STD_LOGIC_VECTOR (31 downto 0);
        din64 : IN STD_LOGIC_VECTOR (31 downto 0);
        din65 : IN STD_LOGIC_VECTOR (31 downto 0);
        din66 : IN STD_LOGIC_VECTOR (31 downto 0);
        din67 : IN STD_LOGIC_VECTOR (31 downto 0);
        din68 : IN STD_LOGIC_VECTOR (31 downto 0);
        din69 : IN STD_LOGIC_VECTOR (31 downto 0);
        din70 : IN STD_LOGIC_VECTOR (31 downto 0);
        din71 : IN STD_LOGIC_VECTOR (31 downto 0);
        din72 : IN STD_LOGIC_VECTOR (31 downto 0);
        din73 : IN STD_LOGIC_VECTOR (31 downto 0);
        din74 : IN STD_LOGIC_VECTOR (31 downto 0);
        din75 : IN STD_LOGIC_VECTOR (31 downto 0);
        din76 : IN STD_LOGIC_VECTOR (31 downto 0);
        din77 : IN STD_LOGIC_VECTOR (31 downto 0);
        din78 : IN STD_LOGIC_VECTOR (31 downto 0);
        din79 : IN STD_LOGIC_VECTOR (31 downto 0);
        din80 : IN STD_LOGIC_VECTOR (31 downto 0);
        din81 : IN STD_LOGIC_VECTOR (31 downto 0);
        din82 : IN STD_LOGIC_VECTOR (31 downto 0);
        din83 : IN STD_LOGIC_VECTOR (31 downto 0);
        din84 : IN STD_LOGIC_VECTOR (31 downto 0);
        din85 : IN STD_LOGIC_VECTOR (31 downto 0);
        din86 : IN STD_LOGIC_VECTOR (31 downto 0);
        din87 : IN STD_LOGIC_VECTOR (31 downto 0);
        din88 : IN STD_LOGIC_VECTOR (31 downto 0);
        din89 : IN STD_LOGIC_VECTOR (31 downto 0);
        din90 : IN STD_LOGIC_VECTOR (31 downto 0);
        din91 : IN STD_LOGIC_VECTOR (31 downto 0);
        din92 : IN STD_LOGIC_VECTOR (31 downto 0);
        din93 : IN STD_LOGIC_VECTOR (31 downto 0);
        din94 : IN STD_LOGIC_VECTOR (31 downto 0);
        din95 : IN STD_LOGIC_VECTOR (31 downto 0);
        din96 : IN STD_LOGIC_VECTOR (31 downto 0);
        din97 : IN STD_LOGIC_VECTOR (31 downto 0);
        din98 : IN STD_LOGIC_VECTOR (31 downto 0);
        din99 : IN STD_LOGIC_VECTOR (31 downto 0);
        din100 : IN STD_LOGIC_VECTOR (31 downto 0);
        din101 : IN STD_LOGIC_VECTOR (31 downto 0);
        din102 : IN STD_LOGIC_VECTOR (31 downto 0);
        din103 : IN STD_LOGIC_VECTOR (31 downto 0);
        din104 : IN STD_LOGIC_VECTOR (31 downto 0);
        din105 : IN STD_LOGIC_VECTOR (31 downto 0);
        din106 : IN STD_LOGIC_VECTOR (31 downto 0);
        din107 : IN STD_LOGIC_VECTOR (31 downto 0);
        din108 : IN STD_LOGIC_VECTOR (31 downto 0);
        din109 : IN STD_LOGIC_VECTOR (31 downto 0);
        din110 : IN STD_LOGIC_VECTOR (31 downto 0);
        din111 : IN STD_LOGIC_VECTOR (31 downto 0);
        din112 : IN STD_LOGIC_VECTOR (31 downto 0);
        din113 : IN STD_LOGIC_VECTOR (31 downto 0);
        din114 : IN STD_LOGIC_VECTOR (31 downto 0);
        din115 : IN STD_LOGIC_VECTOR (31 downto 0);
        din116 : IN STD_LOGIC_VECTOR (31 downto 0);
        din117 : IN STD_LOGIC_VECTOR (31 downto 0);
        din118 : IN STD_LOGIC_VECTOR (31 downto 0);
        din119 : IN STD_LOGIC_VECTOR (31 downto 0);
        din120 : IN STD_LOGIC_VECTOR (31 downto 0);
        din121 : IN STD_LOGIC_VECTOR (31 downto 0);
        din122 : IN STD_LOGIC_VECTOR (31 downto 0);
        din123 : IN STD_LOGIC_VECTOR (31 downto 0);
        din124 : IN STD_LOGIC_VECTOR (31 downto 0);
        din125 : IN STD_LOGIC_VECTOR (31 downto 0);
        din126 : IN STD_LOGIC_VECTOR (31 downto 0);
        din127 : IN STD_LOGIC_VECTOR (31 downto 0);
        din128 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bellman_ford_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_1287_32_1_1_U265 : component bellman_ford_mux_1287_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 32,
        din62_WIDTH => 32,
        din63_WIDTH => 32,
        din64_WIDTH => 32,
        din65_WIDTH => 32,
        din66_WIDTH => 32,
        din67_WIDTH => 32,
        din68_WIDTH => 32,
        din69_WIDTH => 32,
        din70_WIDTH => 32,
        din71_WIDTH => 32,
        din72_WIDTH => 32,
        din73_WIDTH => 32,
        din74_WIDTH => 32,
        din75_WIDTH => 32,
        din76_WIDTH => 32,
        din77_WIDTH => 32,
        din78_WIDTH => 32,
        din79_WIDTH => 32,
        din80_WIDTH => 32,
        din81_WIDTH => 32,
        din82_WIDTH => 32,
        din83_WIDTH => 32,
        din84_WIDTH => 32,
        din85_WIDTH => 32,
        din86_WIDTH => 32,
        din87_WIDTH => 32,
        din88_WIDTH => 32,
        din89_WIDTH => 32,
        din90_WIDTH => 32,
        din91_WIDTH => 32,
        din92_WIDTH => 32,
        din93_WIDTH => 32,
        din94_WIDTH => 32,
        din95_WIDTH => 32,
        din96_WIDTH => 32,
        din97_WIDTH => 32,
        din98_WIDTH => 32,
        din99_WIDTH => 32,
        din100_WIDTH => 32,
        din101_WIDTH => 32,
        din102_WIDTH => 32,
        din103_WIDTH => 32,
        din104_WIDTH => 32,
        din105_WIDTH => 32,
        din106_WIDTH => 32,
        din107_WIDTH => 32,
        din108_WIDTH => 32,
        din109_WIDTH => 32,
        din110_WIDTH => 32,
        din111_WIDTH => 32,
        din112_WIDTH => 32,
        din113_WIDTH => 32,
        din114_WIDTH => 32,
        din115_WIDTH => 32,
        din116_WIDTH => 32,
        din117_WIDTH => 32,
        din118_WIDTH => 32,
        din119_WIDTH => 32,
        din120_WIDTH => 32,
        din121_WIDTH => 32,
        din122_WIDTH => 32,
        din123_WIDTH => 32,
        din124_WIDTH => 32,
        din125_WIDTH => 32,
        din126_WIDTH => 32,
        din127_WIDTH => 32,
        din128_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => updated_dist_128_reload,
        din1 => updated_dist_129_reload,
        din2 => updated_dist_130_reload,
        din3 => updated_dist_131_reload,
        din4 => updated_dist_132_reload,
        din5 => updated_dist_133_reload,
        din6 => updated_dist_134_reload,
        din7 => updated_dist_135_reload,
        din8 => updated_dist_136_reload,
        din9 => updated_dist_137_reload,
        din10 => updated_dist_138_reload,
        din11 => updated_dist_139_reload,
        din12 => updated_dist_140_reload,
        din13 => updated_dist_141_reload,
        din14 => updated_dist_142_reload,
        din15 => updated_dist_143_reload,
        din16 => updated_dist_144_reload,
        din17 => updated_dist_145_reload,
        din18 => updated_dist_146_reload,
        din19 => updated_dist_147_reload,
        din20 => updated_dist_148_reload,
        din21 => updated_dist_149_reload,
        din22 => updated_dist_150_reload,
        din23 => updated_dist_151_reload,
        din24 => updated_dist_152_reload,
        din25 => updated_dist_153_reload,
        din26 => updated_dist_154_reload,
        din27 => updated_dist_155_reload,
        din28 => updated_dist_156_reload,
        din29 => updated_dist_157_reload,
        din30 => updated_dist_158_reload,
        din31 => updated_dist_159_reload,
        din32 => updated_dist_160_reload,
        din33 => updated_dist_161_reload,
        din34 => updated_dist_162_reload,
        din35 => updated_dist_163_reload,
        din36 => updated_dist_164_reload,
        din37 => updated_dist_165_reload,
        din38 => updated_dist_166_reload,
        din39 => updated_dist_167_reload,
        din40 => updated_dist_168_reload,
        din41 => updated_dist_169_reload,
        din42 => updated_dist_170_reload,
        din43 => updated_dist_171_reload,
        din44 => updated_dist_172_reload,
        din45 => updated_dist_173_reload,
        din46 => updated_dist_174_reload,
        din47 => updated_dist_175_reload,
        din48 => updated_dist_176_reload,
        din49 => updated_dist_177_reload,
        din50 => updated_dist_178_reload,
        din51 => updated_dist_179_reload,
        din52 => updated_dist_180_reload,
        din53 => updated_dist_181_reload,
        din54 => updated_dist_182_reload,
        din55 => updated_dist_183_reload,
        din56 => updated_dist_184_reload,
        din57 => updated_dist_185_reload,
        din58 => updated_dist_186_reload,
        din59 => updated_dist_187_reload,
        din60 => updated_dist_188_reload,
        din61 => updated_dist_189_reload,
        din62 => updated_dist_190_reload,
        din63 => updated_dist_191_reload,
        din64 => updated_dist_192_reload,
        din65 => updated_dist_193_reload,
        din66 => updated_dist_194_reload,
        din67 => updated_dist_195_reload,
        din68 => updated_dist_196_reload,
        din69 => updated_dist_197_reload,
        din70 => updated_dist_198_reload,
        din71 => updated_dist_199_reload,
        din72 => updated_dist_200_reload,
        din73 => updated_dist_201_reload,
        din74 => updated_dist_202_reload,
        din75 => updated_dist_203_reload,
        din76 => updated_dist_204_reload,
        din77 => updated_dist_205_reload,
        din78 => updated_dist_206_reload,
        din79 => updated_dist_207_reload,
        din80 => updated_dist_208_reload,
        din81 => updated_dist_209_reload,
        din82 => updated_dist_210_reload,
        din83 => updated_dist_211_reload,
        din84 => updated_dist_212_reload,
        din85 => updated_dist_213_reload,
        din86 => updated_dist_214_reload,
        din87 => updated_dist_215_reload,
        din88 => updated_dist_216_reload,
        din89 => updated_dist_217_reload,
        din90 => updated_dist_218_reload,
        din91 => updated_dist_219_reload,
        din92 => updated_dist_220_reload,
        din93 => updated_dist_221_reload,
        din94 => updated_dist_222_reload,
        din95 => updated_dist_223_reload,
        din96 => updated_dist_224_reload,
        din97 => updated_dist_225_reload,
        din98 => updated_dist_226_reload,
        din99 => updated_dist_227_reload,
        din100 => updated_dist_228_reload,
        din101 => updated_dist_229_reload,
        din102 => updated_dist_230_reload,
        din103 => updated_dist_231_reload,
        din104 => updated_dist_232_reload,
        din105 => updated_dist_233_reload,
        din106 => updated_dist_234_reload,
        din107 => updated_dist_235_reload,
        din108 => updated_dist_236_reload,
        din109 => updated_dist_237_reload,
        din110 => updated_dist_238_reload,
        din111 => updated_dist_239_reload,
        din112 => updated_dist_240_reload,
        din113 => updated_dist_241_reload,
        din114 => updated_dist_242_reload,
        din115 => updated_dist_243_reload,
        din116 => updated_dist_244_reload,
        din117 => updated_dist_245_reload,
        din118 => updated_dist_246_reload,
        din119 => updated_dist_247_reload,
        din120 => updated_dist_248_reload,
        din121 => updated_dist_249_reload,
        din122 => updated_dist_250_reload,
        din123 => updated_dist_251_reload,
        din124 => updated_dist_252_reload,
        din125 => updated_dist_253_reload,
        din126 => updated_dist_254_reload,
        din127 => updated_dist_255_reload,
        din128 => tmp_2_fu_1166_p129,
        dout => tmp_2_fu_1166_p130);

    flow_control_loop_pipe_sequential_init_U : component bellman_ford_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    j_V_1_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if ((icmp_ln1027_fu_1150_p2 = ap_const_lv1_0)) then 
                    j_V_1_fu_318 <= add_ln840_fu_1156_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_V_1_fu_318 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln840_fu_1156_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_V) + unsigned(ap_const_lv8_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, icmp_ln1027_fu_1150_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1027_fu_1150_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_V_assign_proc : process(ap_CS_fsm_state1, j_V_1_fu_318, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_j_V <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_j_V <= j_V_1_fu_318;
        end if; 
    end process;

    dist_0_address0 <= zext_ln48_fu_1446_p1(5 - 1 downto 0);

    dist_0_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dist_0_ce0 <= ap_const_logic_1;
        else 
            dist_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dist_0_d0 <= tmp_2_fu_1166_p130;

    dist_0_we0_assign_proc : process(ap_CS_fsm_state1, icmp_ln1027_fu_1150_p2, trunc_ln48_fu_1432_p1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1027_fu_1150_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (trunc_ln48_fu_1432_p1 = ap_const_lv2_0))) then 
            dist_0_we0 <= ap_const_logic_1;
        else 
            dist_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dist_1_address0 <= zext_ln48_fu_1446_p1(5 - 1 downto 0);

    dist_1_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dist_1_ce0 <= ap_const_logic_1;
        else 
            dist_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dist_1_d0 <= tmp_2_fu_1166_p130;

    dist_1_we0_assign_proc : process(ap_CS_fsm_state1, icmp_ln1027_fu_1150_p2, trunc_ln48_fu_1432_p1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1027_fu_1150_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (trunc_ln48_fu_1432_p1 = ap_const_lv2_1))) then 
            dist_1_we0 <= ap_const_logic_1;
        else 
            dist_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dist_2_address0 <= zext_ln48_fu_1446_p1(5 - 1 downto 0);

    dist_2_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dist_2_ce0 <= ap_const_logic_1;
        else 
            dist_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dist_2_d0 <= tmp_2_fu_1166_p130;

    dist_2_we0_assign_proc : process(ap_CS_fsm_state1, icmp_ln1027_fu_1150_p2, trunc_ln48_fu_1432_p1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1027_fu_1150_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (trunc_ln48_fu_1432_p1 = ap_const_lv2_2))) then 
            dist_2_we0 <= ap_const_logic_1;
        else 
            dist_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dist_3_address0 <= zext_ln48_fu_1446_p1(5 - 1 downto 0);

    dist_3_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dist_3_ce0 <= ap_const_logic_1;
        else 
            dist_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dist_3_d0 <= tmp_2_fu_1166_p130;

    dist_3_we0_assign_proc : process(ap_CS_fsm_state1, icmp_ln1027_fu_1150_p2, trunc_ln48_fu_1432_p1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1027_fu_1150_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (trunc_ln48_fu_1432_p1 = ap_const_lv2_3))) then 
            dist_3_we0 <= ap_const_logic_1;
        else 
            dist_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1027_fu_1150_p2 <= "1" when (ap_sig_allocacmp_j_V = ap_const_lv8_80) else "0";
    lshr_ln3_fu_1436_p4 <= ap_sig_allocacmp_j_V(6 downto 2);
    tmp_2_fu_1166_p129 <= ap_sig_allocacmp_j_V(7 - 1 downto 0);
    trunc_ln48_fu_1432_p1 <= ap_sig_allocacmp_j_V(2 - 1 downto 0);
    zext_ln48_fu_1446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln3_fu_1436_p4),64));
end behav;
